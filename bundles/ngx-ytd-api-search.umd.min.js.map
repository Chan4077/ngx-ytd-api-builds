{"version":3,"sources":["ng://ngx-ytd-api/search/ytd-api-search.service.ts","ng://ngx-ytd-api/search/ytd-api-search.module.ts"],"names":["NgxYtdApiSearchService","http","this","ngxYtdSearchApiUrl","prototype","_httpHandler","apiEndpoint","opts","body","httpType","headers","undefined","HttpHeaders","set","createHttpDelete","createHttpGet","createHttpPost","createHttpPut","list","Injectable","SimpleHttpService","NgxYtdApiSearchModule","NgModule","args","imports","SimpleHttpModule","providers"],"mappings":"mcAAA,IAAAA,EAAA,WASE,SAAAA,EACUC,GAAAC,KAAAD,KAAAA,EAKDC,KAAAC,mBAAqB,+CAuEhC,OArEUH,EAAAI,UAAAC,aAAR,SACEC,EACAC,EACAC,EACAC,OAEIC,EAKJ,YARA,IAAAF,IAAAA,EAAA,MAII,gBAAiBD,UAAeA,EAAkB,cAAMI,WAAqC,OAAxBJ,EAAkB,cACzFG,GAAU,IAAIE,EAAAA,aACXC,IAAI,gBAAiB,UAAUN,EAAkB,cAE9CE,GACN,IAAK,SACH,OAAIC,EACKR,KAAKD,KAAKa,iBAAuBR,EAAaC,EAAMG,GAEpDR,KAAKD,KAAKa,iBAAuBR,EAAaC,GAEzD,IAAK,MACH,OAAIG,EACKR,KAAKD,KAAKc,cAAoBT,EAAaC,EAAMG,GAEjDR,KAAKD,KAAKc,cAAoBT,EAAaC,GAEtD,IAAK,OACH,OAAIG,EACEF,EACKN,KAAKD,KAAKe,eAAwBV,EAAaC,EAAMC,EAAME,GAE3DR,KAAKD,KAAKe,eAAwBV,EAAaC,EAAM,KAAMG,GAGhEF,EACKN,KAAKD,KAAKe,eAAwBV,EAAaC,EAAMC,GAErDN,KAAKD,KAAKe,eAAwBV,EAAaC,EAAM,MAGlE,IAAK,MACH,OAAIG,EACEF,EACKN,KAAKD,KAAKgB,cAAuBX,EAAaC,EAAMC,EAAME,GAE1DR,KAAKD,KAAKgB,cAAuBX,EAAaC,EAAM,KAAMG,GAG/DF,EACKN,KAAKD,KAAKgB,cAAuBX,EAAaC,EAAMC,GAEpDN,KAAKD,KAAKgB,cAAuBX,EAAaC,EAAM,QAYrEP,EAAAI,UAAAc,KAAA,SAAKX,GACH,OAAOL,KAAKG,aACVH,KAAKC,mBACLI,EACA,KACA,4BA5ELY,EAAAA,sDAFQC,EAAAA,qBAiFTpB,EAtFA,GCAAqB,EAAA,WAIA,SAAAA,KAQqC,2BARpCC,EAAAA,SAAQC,KAAA,CAAC,CACRC,QAAS,CACPC,EAAAA,kBAEFC,UAAW,CACT1B,OAGiCqB,EAZrC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { NgxYtdApiSearchListOpts, NgxYtdApiSearchListResult } from './ytd-api-search.interfaces';\nimport { SimpleHttpService } from 'ngx-simple-http';\n\n@Injectable()\nexport class NgxYtdApiSearchService {\n  constructor(\n    private http: SimpleHttpService\n  ) { }\n  /**\n   * The API URL for the Search API of the YouTube Data v3 API\n   */\n  readonly ngxYtdSearchApiUrl = 'https://www.googleapis.com/youtube/v3/search';\n  // Handler for HTTP requests\n  private _httpHandler<B extends any, P extends any, R extends any>(\n    apiEndpoint: string,\n    opts: P,\n    body: B = null,\n    httpType: 'delete' | 'get' | 'post' | 'put'\n  ): Observable<R> {\n    let headers: HttpHeaders;\n    if ('accessToken' in opts && typeof opts['accessToken'] !== undefined && opts['accessToken'] !== null) {\n      headers = new HttpHeaders()\n        .set('Authorization', `Bearer ${opts['accessToken']}`);\n    }\n    switch (httpType) {\n      case 'delete':\n        if (headers) {\n          return this.http.createHttpDelete<P, R>(apiEndpoint, opts, headers);\n        } else {\n          return this.http.createHttpDelete<P, R>(apiEndpoint, opts);\n        }\n      case 'get':\n        if (headers) {\n          return this.http.createHttpGet<P, R>(apiEndpoint, opts, headers);\n        } else {\n          return this.http.createHttpGet<P, R>(apiEndpoint, opts);\n        }\n      case 'post':\n        if (headers) {\n          if (body) {\n            return this.http.createHttpPost<B, P, R>(apiEndpoint, opts, body, headers);\n          } else {\n            return this.http.createHttpPost<B, P, R>(apiEndpoint, opts, null, headers);\n          }\n        } else {\n          if (body) {\n            return this.http.createHttpPost<B, P, R>(apiEndpoint, opts, body);\n          } else {\n            return this.http.createHttpPost<B, P, R>(apiEndpoint, opts, null);\n          }\n        }\n      case 'put':\n        if (headers) {\n          if (body) {\n            return this.http.createHttpPut<B, P, R>(apiEndpoint, opts, body, headers);\n          } else {\n            return this.http.createHttpPut<B, P, R>(apiEndpoint, opts, null, headers);\n          }\n        } else {\n          if (body) {\n            return this.http.createHttpPut<B, P, R>(apiEndpoint, opts, body);\n          } else {\n            return this.http.createHttpPut<B, P, R>(apiEndpoint, opts, null);\n          }\n        }\n    }\n  }\n  /**\n   * Returns a collection of search results that match the query parameters specified\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list for more info\n   * @param opts API parameters for the API\n   * @return Results of the search has an `Observable`\n   */\n  list(opts: NgxYtdApiSearchListOpts): Observable<NgxYtdApiSearchListResult> {\n    return this._httpHandler<any, NgxYtdApiSearchListOpts, NgxYtdApiSearchListResult>(\n      this.ngxYtdSearchApiUrl,\n      opts,\n      null,\n      'get'\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SimpleHttpModule } from 'ngx-simple-http';\nimport { NgxYtdApiSearchService } from './ytd-api-search.service';\n\n@NgModule({\n  imports: [\n    SimpleHttpModule\n  ],\n  providers: [\n    NgxYtdApiSearchService\n  ]\n})\nexport class NgxYtdApiSearchModule { }\n"]}