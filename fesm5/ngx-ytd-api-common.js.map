{"version":3,"file":"ngx-ytd-api-common.js.map","sources":["ng://ngx-ytd-api/common/ytd-api-common.injectors.ts","ng://ngx-ytd-api/common/ytd-api-common.service.ts","ng://ngx-ytd-api/common/ytd-api-common.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { NgxYtdApiStandardOpts } from './ytd-api-common.interface';\n\n/** Injection token that can be used to specify the APi's standard options. */\nexport const NGX_YTD_API_DEFAULT_STANDARD_OPTIONS = new InjectionToken<NgxYtdApiStandardOpts>('ngx-ytd-api-default-standard-opts');\n","import { HttpHeaders } from '@angular/common/http';\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SimpleHttpService } from 'ngx-simple-http';\nimport { NGX_YTD_API_DEFAULT_STANDARD_OPTIONS } from './ytd-api-common.injectors';\nimport { NgxYtdApiStandardOpts } from './ytd-api-common.interface';\n\n@Injectable()\nexport class NgxYtdApiCommonService {\n  constructor(\n    private http: SimpleHttpService,\n    @Inject(NGX_YTD_API_DEFAULT_STANDARD_OPTIONS) @Optional() private defaultOptions: NgxYtdApiStandardOpts\n  ) { }\n  /**\n   * Merges an API request's options with the default standard options as\n   * specified via the `NGX_YTD_API_DEFAULT_STANDARD_OPTIONS` injection token\n   * @param opts The API request's options\n   * @template T A TypeScript interface to type `opts` against\n   * @returns The merged API request's options\n   */\n  mergeOpts<T extends any>(opts: T): T & NgxYtdApiStandardOpts {\n    if (this.defaultOptions) {\n      return { ...opts, ...this.defaultOptions };\n    } else {\n      return opts;\n    }\n  }\n  /**\n   * Sends a HTTP request to the specified `apiEndpoint`\n   * @param apiEndpoint The API endpoint to send a HTTP request to\n   * @param opts Options to append to the endpoint as URL queries\n   * @param body The body of the HTTP request\n   * @param httpType The type of HTTP request to send\n   * @template B A TypeScript interface to type the HTTP request's body to\n   * @template P A TypeScript interface to type the HTTP request's options to\n   * @template R A TypeScript interface to type the HTTP request's result to\n   * @returns The result of the HTTP request\n   */\n  sendHttpRequest<B extends any, P extends any, R extends any>(\n    apiEndpoint: string,\n    opts: P,\n    body: B = null,\n    httpType: 'delete' | 'get' | 'post' | 'put'\n  ): Observable<R> {\n    let headers: HttpHeaders;\n    if ('accessToken' in opts && typeof opts['accessToken'] !== undefined && opts['accessToken'] !== null) {\n      headers = new HttpHeaders()\n        .set('Authorization', `Bearer ${opts['accessToken']}`);\n    }\n    switch (httpType) {\n      case 'delete':\n        if (headers) {\n          return this.http.createHttpDelete<P, R>(apiEndpoint, opts, headers);\n        } else {\n          return this.http.createHttpDelete<P, R>(apiEndpoint, opts);\n        }\n      case 'get':\n        if (headers) {\n          return this.http.createHttpGet<P, R>(apiEndpoint, opts, headers);\n        } else {\n          return this.http.createHttpGet<P, R>(apiEndpoint, opts);\n        }\n      case 'post':\n        if (headers) {\n          if (body) {\n            return this.http.createHttpPost<B, P, R>(apiEndpoint, opts, body, headers);\n          } else {\n            return this.http.createHttpPost<B, P, R>(apiEndpoint, opts, null, headers);\n          }\n        } else {\n          if (body) {\n            return this.http.createHttpPost<B, P, R>(apiEndpoint, opts, body);\n          } else {\n            return this.http.createHttpPost<B, P, R>(apiEndpoint, opts, null);\n          }\n        }\n      case 'put':\n        if (headers) {\n          if (body) {\n            return this.http.createHttpPut<B, P, R>(apiEndpoint, opts, body, headers);\n          } else {\n            return this.http.createHttpPut<B, P, R>(apiEndpoint, opts, null, headers);\n          }\n        } else {\n          if (body) {\n            return this.http.createHttpPut<B, P, R>(apiEndpoint, opts, body);\n          } else {\n            return this.http.createHttpPut<B, P, R>(apiEndpoint, opts, null);\n          }\n        }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxYtdApiCommonService } from './ytd-api-common.service';\nimport { SimpleHttpModule } from 'ngx-simple-http';\n\n@NgModule({\n  imports: [\n    SimpleHttpModule\n  ],\n  providers: [\n    NgxYtdApiCommonService\n  ]\n})\nexport class NgxYtdApiCommonModule { }\n"],"names":[],"mappings":"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"}
