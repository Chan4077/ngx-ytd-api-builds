{"version":3,"sources":["ng://ngx-ytd-api/comments/ytd-api-comments.service.ts","ng://ngx-ytd-api/comments/ytd-api-comments.module.ts"],"names":["NgxYtdApiCommentsService","common","this","ngxYtdCommentsApiUrl","prototype","delete","opts","sendHttpRequest","mergeOpts","insert","body","list","markAsSpam","setModerationStatus","update","Injectable","NgxYtdApiCommonService","NgxYtdApiCommentsModule","NgModule","args","imports","NgxYtdApiCommonModule","providers"],"mappings":"2YACA,IAAAA,EAAA,WAgBE,SAAAA,EACUC,GAAAC,KAAAD,OAAAA,EAKDC,KAAAC,qBAAuB,iDA6FlC,OArFEH,EAAAI,UAAAC,UAAA,SAAOC,GACL,OAAOJ,KAAKD,OAAOM,gBACjBL,KAAKC,qBACLD,KAAKD,OAAOO,UAAuCF,GACnD,KACA,WAWJN,EAAAI,UAAAK,OAAA,SAAOC,EAAiCJ,GACtC,OAAOJ,KAAKD,OAAOM,gBACjBL,KAAKC,qBACLD,KAAKD,OAAOO,UAAuCF,GACnDI,EACA,SAUJV,EAAAI,UAAAO,KAAA,SAAKL,GACH,OAAOJ,KAAKD,OAAOM,gBACjBL,KAAKC,qBACLD,KAAKD,OAAOO,UAAqCF,GACjD,KACA,QAUJN,EAAAI,UAAAQ,WAAA,SAAWN,GACT,OAAOJ,KAAKD,OAAOM,gBACdL,KAAKC,qBAAoB,cAC5BD,KAAKD,OAAOO,UAA2CF,GACvD,KACA,SAUJN,EAAAI,UAAAS,oBAAA,SAAoBP,GAClB,OAAOJ,KAAKD,OAAOM,gBACdL,KAAKC,qBAAoB,uBAC5BD,KAAKD,OAAOO,UAAoDF,GAChE,KACA,SAWJN,EAAAI,UAAAU,OAAA,SAAOJ,EAAiCJ,GACtC,OAAOJ,KAAKD,OAAOM,gBACjBL,KAAKC,qBACLD,KAAKD,OAAOO,UAAuCF,GACnDI,EACA,4BAlGLK,EAAAA,sDAbQC,EAAAA,0BAkHThB,EAnHA,GCDAiB,EAAA,WAGA,SAAAA,KAQuC,2BARtCC,EAAAA,SAAQC,KAAA,CAAC,CACRC,QAAS,CACPC,EAAAA,uBAEFC,UAAW,CACTtB,OAGmCiB,EAXvC","sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { NgxYtdApiCommonService } from 'ngx-ytd-api/common';\nimport { Observable } from 'rxjs';\nimport {\n  NgxYtdApiCommentsDeleteOpts,\n  NgxYtdApiCommentsInsertOpts,\n  NgxYtdApiCommentsListOpts,\n  NgxYtdApiCommentsListResult,\n  NgxYtdApiCommentsMarkAsSpamOpts,\n  NgxYtdApiCommentsResource,\n  NgxYtdApiCommentsSetModerationStatusOpts,\n  NgxYtdApiCommentsUpdateOpts\n} from './ytd-api-comments.interface';\n\n@Injectable()\nexport class NgxYtdApiCommentsService {\n  constructor(\n    private common: NgxYtdApiCommonService\n  ) { }\n  /**\n   * The API URL for the Comments API of the YouTube Data v3 API\n   */\n  readonly ngxYtdCommentsApiUrl = 'https://www.googleapis.com/youtube/v3/comments';\n  /**\n   * Deletes a comment\n   *\n   * See https://developers.google.com/youtube/v3/docs/comments/delete for more info\n   * @param opts Options for the API\n   * @return Results of the deletion as an `Observable`\n   */\n  delete(opts: NgxYtdApiCommentsDeleteOpts): Observable<any> {\n    return this.common.sendHttpRequest<any, NgxYtdApiCommentsDeleteOpts, any>(\n      this.ngxYtdCommentsApiUrl,\n      this.common.mergeOpts<NgxYtdApiCommentsDeleteOpts>(opts),\n      null,\n      'delete'\n    );\n  }\n  /**\n   * Creates a reply to an existing comment\n   *\n   * See https://developers.google.com/youtube/v3/docs/comments/insert for more info\n   * @param body The API body\n   * @param opts Options for the API\n   * @return Results of the creation as an `Observable`\n   */\n  insert(body: NgxYtdApiCommentsResource, opts: NgxYtdApiCommentsInsertOpts): Observable<any> {\n    return this.common.sendHttpRequest<NgxYtdApiCommentsResource, NgxYtdApiCommentsInsertOpts, any>(\n      this.ngxYtdCommentsApiUrl,\n      this.common.mergeOpts<NgxYtdApiCommentsInsertOpts>(opts),\n      body,\n      'post'\n    );\n  }\n  /**\n   * Retrieves comments\n   *\n   * See https://developers.google.com/youtube/v3/docs/comments/list for more info\n   * @param opts Options for the API\n   * @return Results of the request as an `Observable`\n   */\n  list(opts: NgxYtdApiCommentsListOpts): Observable<NgxYtdApiCommentsListResult> {\n    return this.common.sendHttpRequest<any, NgxYtdApiCommentsListOpts, NgxYtdApiCommentsListResult>(\n      this.ngxYtdCommentsApiUrl,\n      this.common.mergeOpts<NgxYtdApiCommentsListOpts>(opts),\n      null,\n      'get'\n    );\n  }\n  /**\n   * Flags one or more comments as spam\n   *\n   * See https://developers.google.com/youtube/v3/docs/comments/markAsSpam for more info\n   * @param opts Options for the API\n   * @return Results of the request as an `Observable`\n   */\n  markAsSpam(opts: NgxYtdApiCommentsMarkAsSpamOpts): Observable<any> {\n    return this.common.sendHttpRequest<any, NgxYtdApiCommentsMarkAsSpamOpts, any>(\n      `${this.ngxYtdCommentsApiUrl}/markAsSpam`,\n      this.common.mergeOpts<NgxYtdApiCommentsMarkAsSpamOpts>(opts),\n      null,\n      'post'\n    );\n  }\n  /**\n   * Sets the moderation status of one or more comments\n   *\n   * See https://developers.google.com/youtube/v3/docs/comments/setModerationStatus for more info\n   * @param opts Options for the API\n   * @return Results of the request as an `Observable`\n   */\n  setModerationStatus(opts: NgxYtdApiCommentsSetModerationStatusOpts): Observable<any> {\n    return this.common.sendHttpRequest<any, NgxYtdApiCommentsSetModerationStatusOpts, any>(\n      `${this.ngxYtdCommentsApiUrl}/setModerationStatus`,\n      this.common.mergeOpts<NgxYtdApiCommentsSetModerationStatusOpts>(opts),\n      null,\n      'post'\n    );\n  }\n  /**\n   * Modifies a comment\n   *\n   * See https://developers.google.com/youtube/v3/docs/comments/update for more info\n   * @param body The API body\n   * @param opts Options for the API\n   * @return Results of the update as an `Observable`\n   */\n  update(body: NgxYtdApiCommentsResource, opts: NgxYtdApiCommentsUpdateOpts): Observable<NgxYtdApiCommentsResource> {\n    return this.common.sendHttpRequest<NgxYtdApiCommentsResource, NgxYtdApiCommentsUpdateOpts, NgxYtdApiCommentsResource>(\n      this.ngxYtdCommentsApiUrl,\n      this.common.mergeOpts<NgxYtdApiCommentsUpdateOpts>(opts),\n      body,\n      'put'\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxYtdApiCommonModule } from 'ngx-ytd-api/common';\nimport { NgxYtdApiCommentsService } from './ytd-api-comments.service';\n@NgModule({\n  imports: [\n    NgxYtdApiCommonModule\n  ],\n  providers: [\n    NgxYtdApiCommentsService\n  ]\n})\nexport class NgxYtdApiCommentsModule { }\n"]}