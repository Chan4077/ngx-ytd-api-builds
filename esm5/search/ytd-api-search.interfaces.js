//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"ytd-api-search.interfaces.js","sourceRoot":"ng://ngx-ytd-api/search/","sources":["ytd-api-search.interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import { NgxYtdApiGenericOpts, NgxYtdApiGenericResource } from 'ngx-ytd-api/common';\n\nexport interface NgxYtdApiSearchListOpts extends NgxYtdApiGenericOpts {\n  /**\n   * The channel ID to search videos from\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#channelId for more info\n   */\n  channelId?: string;\n  /**\n   * Restricts a search to a particular type of channel.\n   * Acceptable values:\n   * - `any` - Return all channels\n   * - `show` - Only return shows\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#channelType for more info\n   */\n  channelType?: 'any' | 'show';\n  /**\n   * Restricts a search to broadcast events\n   * Note: If a value is specified for this parameter, the parameter `type`'s value must be set to `video`\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#eventType for more info\n   */\n  eventType?: 'completed' | 'live' | 'upcoming';\n  /**\n   * See https://developers.google.com/youtube/v3/docs/search/list#location for more info\n   */\n  location?: string;\n  /**\n   * See https://developers.google.com/youtube/v3/docs/search/list#locationRadius for more info\n   */\n  locationRadius?: string;\n  /**\n   * Maximum results for video searching\n   * Allowed values: 0 - 50\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#maxResults for more info\n   */\n  maxResults?: number;\n  /**\n   * Used for specifying the order of resources in the response.\n   * Default value: `relevance`\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#order for more info\n   */\n  order?: 'date' | 'rating' | 'relevance' | 'title' | 'videoCount' | 'viewCount';\n  /**\n   * The page token to get a response from\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#pageToken for more info\n   */\n  pageToken?: string;\n  /**\n   * The query to search for\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#q for more info\n   */\n  q: string;\n  /**\n   * Allowed values: an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z)\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#publishedAfter for more info\n   */\n  publishedAfter?: string;\n  /**\n   * Allowed values: an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z)\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#publishedBefore for more info\n   */\n  publishedBefore?: string;\n  /**\n   * The parameter tells the API to return search results for videos that can be viewed in the specific country.\n   *\n   * Allowed values:\n   * an [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm|)\n   * country code.\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#regionCode for more info\n   */\n  regionCode?: string;\n  /**\n   * This parameter tells the API to return search results that are most relevant to the specified language.\n   *\n   * Allowed values:\n   * an [ISO 639-1 two-letter language code](http://www.loc.gov/standards/iso639-2/php/code_list.php)\n   *\n   * However, you should use the values zh-Hans for simplified Chinese and zh-Hant for traditional Chinese.\n   *\n   * Note: Results in other languages will still be returned if they are highly relevant to the search query term.\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#regionCode for more info\n   */\n  relevanceLanguage?: string;\n  /**\n   * Indicates whether the search results should include restricted content as well as standard content.\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#safeSearch for more info\n   */\n  safeSearch?: 'moderate' | 'none' | 'strict';\n  /**\n   * See https://developers.google.com/youtube/v3/docs/search/list#topicId for more info\n   */\n  topicId?: string;\n  /**\n   * Restricts a search query to only return certain resources\n   * Note: The value is of a comma-seperated list of resource types.\n   *\n   * Default value (if not specified): `video,channel,playlist`\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#type for more info\n   */\n  type?: string;\n  /**\n   * Whether the API should filter video search results based on whether they have captions.\n   *\n   * Note: the `type` parameter's value must be set to `video`\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#videoCaption for more info\n   */\n  videoCaption?: 'any' | 'closedcaption' | 'none';\n  /**\n   * Filters video search results based on their category.\n   *\n   * Note: the `type` parameter's value must be set to `video`\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#videoCategoryId for more info\n   */\n  videoCategoryId?: string;\n  /**\n   * Restricts a search to only include either high definition/standard definition videos.\n   *\n   * Note: the `type` parameter's value must be set to `video`\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#videoDefinition for more info\n   */\n  videoDefinition?: 'any' | 'high' | 'standard';\n  /**\n   * Restricts a search to only retrieve 2D or 3D videos.\n   *\n   * Note: the `type` parameter's value must be set to `video`\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#videoDimension for more info\n   */\n  videoDimension?: 'any' | '2d' | '3d';\n  /**\n   * Filters video search results based on their duration.\n   *\n   * Note: the `type` parameter's value must be set to `video`\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#videoDuration for more info\n   */\n  videoDuration?: 'any' | 'long' | 'medium' | 'short';\n  /**\n   * Restricts a search to only videos that can be embedded on a webpage.\n   *\n   * Note: the `type` parameter's value must be set to `video`\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#videoEmbeddable for more info\n   */\n  videoEmbeddable?: 'any' | 'true';\n  /**\n   * Filters videos to only include videos with a particular license.\n   *\n   * Note: the `type` parameter's value must be set to `video`\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#videoLicense for more info\n   */\n  videoLicense?: 'any' | 'creativeCommon' | 'youtube';\n  /**\n   * Whether to restrict a search to only videos that can be played outside of youtube.com\n   *\n   * Note: the `type` parameter's value must be set to `video`\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#videoSyndicated for more info\n   */\n  videoSyndicated?: 'any' | 'true';\n  /**\n   * Restrict a search to a particular type of videos\n   *\n   * Note: the `type` parameter's value must be set to `video`\n   *\n   * See https://developers.google.com/youtube/v3/docs/search/list#videoType for more info\n   */\n  videoType?: 'any' | 'episode' | 'movie';\n\n}\n\nexport interface NgxYtdApiSearchResourceThumbnails {\n  [key: string]: NgxYtdApiSearchResourceThumbnail;\n}\nexport interface NgxYtdApiSearchResourceThumbnail {\n  /**\n   * The URL of the thumbnail\n   *\n   * See https://developers.google.com/youtube/v3/docs/search#snippet.thumbnails.(key).url for more info\n   */\n  url?: string;\n  /**\n   * The width of the thumbnail\n   *\n   * See https://developers.google.com/youtube/v3/docs/search#snippet.thumbnails.(key).width for more info\n   */\n  width?: number;\n  /**\n   * The height of the thumbnail\n   *\n   * See https://developers.google.com/youtube/v3/docs/search#snippet.thumbnails.(key).height for more info\n   */\n  height?: number;\n}\n\n/**\n * @deprecated Use {@link NgxYtdApiSearchResourceThumbnail} instead\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface NgxYtdApiSearchListResultItemThumbnail extends NgxYtdApiSearchResourceThumbnail { }\n\n/**\n * @deprecated Use {@link NgxYtdApiSearchResourceThumbnails} instead\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface NgxYtdApiSearchListResultItemThumbnails extends NgxYtdApiSearchResourceThumbnails { }\n\nexport interface NgxYtdApiSearchResource extends NgxYtdApiGenericResource {\n  /**\n   * The id object contains info which can be used for uniquely identifing the resource\n   *\n   * See https://developers.google.com/youtube/v3/docs/search#id for more info\n   */\n  id?: {\n    /**\n     * The type of the API resource\n     *\n     * See https://developers.google.com/youtube/v3/docs/search#id.kind for more info\n     */\n    kind?: string;\n    /**\n     * This property will be present if the `id.kind` property is set to `youtube#video`\n     *\n     * See https://developers.google.com/youtube/v3/docs/search#id.videoId for more info\n     */\n    videoId?: string;\n    /**\n     * This property will be present if the `id.kind` property is set to `youtube#channel`\n     *\n     * See https://developers.google.com/youtube/v3/docs/search#id.channelId for more info\n     */\n    channelId?: string;\n    /**\n     * This property will be present if the `id.kind` property is set to `youtube#playlist`\n     *\n     * See https://developers.google.com/youtube/v3/docs/search#id.playlistId for more info\n     */\n    playlistId?: string;\n  };\n  /**\n   * The `snippet` object contains info on the search result\n   */\n  snippet?: {\n    /**\n     * The creation date and time of the resource. The value is specified in ISO 8601 `(YYYY-MM-DDThh:mm:ss.sZ)` format.\n     */\n    publishedAt?: string | any;\n    /**\n     * The channel's ID\n     */\n    channelId?: string;\n    /**\n     * The title of the search result\n     */\n    title?: string;\n    /**\n     * A description of the search result\n     */\n    description?: string;\n    /**\n     * An object of the thumbnails\n     */\n    thumbnails?: NgxYtdApiSearchResourceThumbnails;\n    /**\n     * The title of the channel that published the resource\n     */\n    channelTitle?: string;\n    /**\n     * See https://developers.google.com/youtube/v3/docs/search#snippet.liveBroadcastContent for more info\n     */\n    liveBroadcastContent?: 'upcoming' | 'live' | 'none';\n  };\n}\n\n/**\n * @deprecated Use {@link NgxYtdApiSearchResource} instead\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface NgxYtdApiSearchListResultItem extends NgxYtdApiSearchResource { }\n\n// Result interfaces\nexport interface NgxYtdApiSearchListResult extends NgxYtdApiGenericResource {\n  /**\n   * The token that can be used as the value of the `pageToken` parameter to retrieve the next page in the result set.\n   */\n  nextPageToken?: string;\n  /**\n   * The token that can be used as the value of the `pageToken` parameter to retrieve the previous page in the result set.\n   */\n  prevPageToken?: string;\n  /**\n   * The region code used for the search query.\n   */\n  regionCode?: string;\n  /**\n   * Paging info about the result\n   */\n  pageInfo?: {\n    /**\n     * Total results. Note that the max value is `1000000` and is approximate.\n     */\n    totalResults?: number;\n    /**\n     * Number of results included in response\n     */\n    resultsPerPage?: number;\n  };\n  /**\n   * An array of results that match the criteria\n   */\n  items?: NgxYtdApiSearchResource[];\n}\n"]}