{"version":3,"file":"ngx-ytd-api.js.map","sources":["ng://ngx-ytd-api/ytd-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nimport * as ytdApiInterfaces from './ytd-api.interfaces';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class NgxYtdApiService {\n\t/**\n\t * The YouTube base API URL\n\t */\n\tprivate ytdApiBaseUrl = 'https://www.googleapis.com/youtube/v3/';\n\tconstructor(private http: HttpClient) { }\n\n\t/**\n\t * Searches for videos using the YouTube HTTP Data API\n\t * @param query The query to search for\n\t * @param opts Options for YouTube Data API for Videos\n\t * @returns Results of the search as a stream\n\t*/\n\tsearchVideos(query: string, opts: ytdApiInterfaces.NgxYtdApiVideoSearchOpts): Observable<ytdApiInterfaces.NgxYtdApiSearchResult> {\n\t\t// Encode the query\n\t\tquery = encodeURI(query);\n\t\tlet _apiUrl = `${this.ytdApiBaseUrl}search?q=${query}&type=video&part=snippet,id&key=${opts.apiKey}`;\n\t\tif (opts.maxResults) {\n\t\t\t_apiUrl += `&maxResults=${opts.maxResults}`;\n\t\t} else {\n\t\t\t_apiUrl += '&maxResults=50';\n\t\t}\n\t\tif (opts.videoEmbeddable) {\n\t\t\t_apiUrl += `&videoEmbeddable=${opts.videoEmbeddable}`;\n\t\t}\n\t\treturn this.http.get<ytdApiInterfaces.NgxYtdApiSearchResult>(_apiUrl);\n\t}\n\t/**\n\t * Searches using the YouTube HTTP Data API\n\t * @param query The query to search for\n\t * @param opts\n\t * @returns Results of the search as a stream\n\t */\n\tsearch(query: string, opts: ytdApiInterfaces.NgxYtdApiSearchOpts): Observable<ytdApiInterfaces.NgxYtdApiSearchResult> {\n\t\tquery = encodeURI(query);\n\t\tlet _apiUrl = `${this.ytdApiBaseUrl}search?q=${query}&type=video&part=snippet,id&key=${opts.apiKey}`;\n\t\tif (opts.maxResults) {\n\t\t\t_apiUrl += `&maxResults=${opts.maxResults}`;\n\t\t} else {\n\t\t\t_apiUrl += '&maxResults=50';\n\t\t}\n\t\tif (opts.channelId) {\n\t\t\t_apiUrl += `&channelId=${opts.channelId}`;\n\t\t}\n\t\treturn this.http.get<ytdApiInterfaces.NgxYtdApiSearchResult>(_apiUrl);\n\t}\n}\n"],"names":[],"mappings":";;;;;;;AAAA;IAcC,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;;;;6BADZ,wCAAwC;KACvB;;;;;;;;;;;;;IAQzC,uCAAY;;;;;;IAAZ,UAAa,KAAa,EAAE,IAA+C;;QAE1E,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;QACzB,qBAAI,OAAO,GAAM,IAAI,CAAC,aAAa,iBAAY,KAAK,wCAAmC,IAAI,CAAC,MAAQ,CAAC;QACrG,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO,IAAI,iBAAe,IAAI,CAAC,UAAY,CAAC;SAC5C;aAAM;YACN,OAAO,IAAI,gBAAgB,CAAC;SAC5B;QACD,IAAI,IAAI,CAAC,eAAe,EAAE;YACzB,OAAO,IAAI,sBAAoB,IAAI,CAAC,eAAiB,CAAC;SACtD;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyC,OAAO,CAAC,CAAC;KACtE;;;;;;;;;;;;;IAOD,iCAAM;;;;;;IAAN,UAAO,KAAa,EAAE,IAA0C;QAC/D,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;QACzB,qBAAI,OAAO,GAAM,IAAI,CAAC,aAAa,iBAAY,KAAK,wCAAmC,IAAI,CAAC,MAAQ,CAAC;QACrG,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO,IAAI,iBAAe,IAAI,CAAC,UAAY,CAAC;SAC5C;aAAM;YACN,OAAO,IAAI,gBAAgB,CAAC;SAC5B;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,IAAI,gBAAc,IAAI,CAAC,SAAW,CAAC;SAC1C;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyC,OAAO,CAAC,CAAC;KACtE;;gBAhDD,UAAU,SAAC;oBACX,UAAU,EAAE,MAAM;iBAClB;;;;gBANQ,UAAU;;;2BAFnB;;;;;;;;;;;;;;;"}
