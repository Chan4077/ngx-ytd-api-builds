{"version":3,"file":"ngx-ytd-api-videos.umd.js.map","sources":["ng://ngx-ytd-api/videos/ytd-api-videos.service.ts","ng://ngx-ytd-api/videos/ytd-api-videos.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { SimpleHttpService } from 'ngx-simple-http';\nimport { Observable } from 'rxjs';\nimport {\n  NgxYtdApiVideosDeleteOpts,\n  NgxYtdApiVideosGetRatingOpts,\n  NgxYtdApiVideosGetRatingResult,\n  NgxYtdApiVideosInsertOpts,\n  NgxYtdApiVideosListOpts,\n  NgxYtdApiVideosListResult,\n  NgxYtdApiVideosRateOpts,\n  NgxYtdApiVideosReportAbuseBody,\n  NgxYtdApiVideosReportAbuseOpts,\n  NgxYtdApiVideosResource,\n  NgxYtdApiVideosUpdateOpts\n} from './ytd-api-videos.interface';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxYtdApiVideosService {\n  constructor(\n    private http: SimpleHttpService\n  ) { }\n  /**\n   * The API URL for the Videos API of the YouTube Data v3 API\n   */\n  readonly ngxYtdVideosApiUrl = 'https://www.googleapis.com/youtube/v3/videos';\n  /**\n   * The API URL for the Videos API for uploading a video of the YouTube Data v3 API\n   */\n  readonly ngxYtdVideoUploadsApiUrl = 'https://www.googleapis.com/upload/youtube/v3/videos';\n  // Handler for HTTP requests\n  private _httpHandler<B extends any, P extends any, R extends any>(\n    apiEndpoint: string,\n    opts: P,\n    body: B = null,\n    httpType: 'delete' | 'get' | 'post' | 'put'\n  ): Observable<R> {\n    let headers: HttpHeaders;\n    if ('accessToken' in opts && typeof opts['accessToken'] !== undefined && opts['accessToken'] !== null) {\n      headers = new HttpHeaders()\n        .set('Authorization', `Bearer ${opts['accessToken']}`);\n    }\n    switch (httpType) {\n      case 'delete':\n        if (headers) {\n          return this.http.createHttpDelete<P, R>(apiEndpoint, opts, headers);\n        } else {\n          return this.http.createHttpDelete<P, R>(apiEndpoint, opts);\n        }\n      case 'get':\n        if (headers) {\n          return this.http.createHttpGet<P, R>(apiEndpoint, opts, headers);\n        } else {\n          return this.http.createHttpGet<P, R>(apiEndpoint, opts);\n        }\n      case 'post':\n        if (headers) {\n          if (body) {\n            return this.http.createHttpPost<B, P, R>(apiEndpoint, opts, body, headers);\n          } else {\n            return this.http.createHttpPost<B, P, R>(apiEndpoint, opts, null, headers);\n          }\n        } else {\n          if (body) {\n            return this.http.createHttpPost<B, P, R>(apiEndpoint, opts, body);\n          } else {\n            return this.http.createHttpPost<B, P, R>(apiEndpoint, opts, null);\n          }\n        }\n      case 'put':\n        if (headers) {\n          if (body) {\n            return this.http.createHttpPut<B, P, R>(apiEndpoint, opts, body, headers);\n          } else {\n            return this.http.createHttpPut<B, P, R>(apiEndpoint, opts, null, headers);\n          }\n        } else {\n          if (body) {\n            return this.http.createHttpPut<B, P, R>(apiEndpoint, opts, body);\n          } else {\n            return this.http.createHttpPut<B, P, R>(apiEndpoint, opts, null);\n          }\n        }\n    }\n  }\n  /**\n   * Deletes a YouTube video\n   *\n   * See https://developers.google.com/youtube/v3/docs/videos/delete for more info\n   * @param opts API parameters for the API\n   * @return An observable of the HTTP request\n   */\n  delete(opts: NgxYtdApiVideosDeleteOpts): Observable<any> {\n    return this._httpHandler<any, NgxYtdApiVideosDeleteOpts, any>(\n      this.ngxYtdVideosApiUrl,\n      opts,\n      null,\n      'delete'\n    );\n  }\n  /**\n   * Retrieves the ratings that the authorized user gave to a list of specified videos\n   *\n   * See https://developers.google.com/youtube/v3/docs/videos/getRating for more info\n   * @param opts API parameters for the API\n   * @return An observable of the HTTP request\n   */\n  getRating(opts: NgxYtdApiVideosGetRatingOpts): Observable<NgxYtdApiVideosGetRatingResult> {\n    return this._httpHandler<any, NgxYtdApiVideosGetRatingOpts, NgxYtdApiVideosGetRatingResult>(\n      `${this.ngxYtdVideosApiUrl}/getRating`,\n      opts,\n      null,\n      'get'\n    );\n  }\n  /**\n   * Uploads a video to YouTube and optionally sets the video's metadata\n   *\n   * See https://developers.google.com/youtube/v3/docs/videos/insert for more info\n   * @param body The HTTP request body\n   * @param opts API parameters for the API\n   * @return An observable of the HTTP request\n   */\n  insert(body: NgxYtdApiVideosResource, opts: NgxYtdApiVideosInsertOpts): Observable<NgxYtdApiVideosResource> {\n    return this._httpHandler<any, NgxYtdApiVideosInsertOpts, NgxYtdApiVideosResource>(\n      this.ngxYtdVideoUploadsApiUrl,\n      opts,\n      body,\n      'post'\n    );\n  }\n  /**\n   * Returns a list of videos that match the requested API parameters\n   *\n   * See https://developers.google.com/youtube/v3/docs/videos/list for more info\n   * @param opts API parameters for the API\n   * @return An observable of the HTTP request\n   */\n  list(opts: NgxYtdApiVideosListOpts): Observable<NgxYtdApiVideosListResult> {\n    return this._httpHandler<any, NgxYtdApiVideosListOpts, NgxYtdApiVideosListResult>(\n      this.ngxYtdVideosApiUrl,\n      opts,\n      null,\n      'get'\n    );\n  }\n  /**\n   * Add a like or dislike rating to a video or remove a rating from a video\n   *\n   * See https://developers.google.com/youtube/v3/docs/videos/rate for more info\n   * @param opts API parameters for the API\n   * @return An observable of the HTTP request\n   */\n  rate(opts: NgxYtdApiVideosRateOpts): Observable<any> {\n    return this._httpHandler<any, NgxYtdApiVideosRateOpts, any>(\n      `${this.ngxYtdVideosApiUrl}/rate`,\n      opts,\n      null,\n      'post'\n    );\n  }\n  /**\n   * Reports a video for having abusive content\n   *\n   * See https://developers.google.com/youtube/v3/docs/videos/reportAbuse for more info\n   * @param body The HTTP request body\n   * @param opts API parameters for the API\n   * @return An observable of the HTTP request\n   */\n  reportAbuse(body: NgxYtdApiVideosReportAbuseBody, opts?: NgxYtdApiVideosReportAbuseOpts): Observable<any> {\n    return this._httpHandler<NgxYtdApiVideosReportAbuseBody, NgxYtdApiVideosReportAbuseOpts, any>(\n      `${this.ngxYtdVideosApiUrl}/reportAbuse`,\n      opts,\n      body,\n      'post'\n    );\n  }\n  /**\n   * Updates a video's metadata\n   *\n   * See https://developers.google.com/youtube/v3/docs/videos/update for more info\n   * @param body The HTTP request body\n   * @param opts API parameters for the API\n   * @return An observable of the HTTP request\n   */\n  update(body: NgxYtdApiVideosResource, opts: NgxYtdApiVideosUpdateOpts): Observable<NgxYtdApiVideosResource> {\n    return this._httpHandler<NgxYtdApiVideosResource, NgxYtdApiVideosUpdateOpts, NgxYtdApiVideosResource>(\n      this.ngxYtdVideosApiUrl,\n      opts,\n      body,\n      'put'\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SimpleHttpModule } from 'ngx-simple-http';\nimport { NgxYtdApiVideosService } from './ytd-api-videos.service';\n\n@NgModule({\n  imports: [\n    SimpleHttpModule\n  ],\n  providers: [\n    NgxYtdApiVideosService\n  ]\n})\nexport class NgxYtdApiVideosModule { }\n"],"names":["http","HttpHeaders","Injectable","SimpleHttpService","NgModule","SimpleHttpModule"],"mappings":"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"}
